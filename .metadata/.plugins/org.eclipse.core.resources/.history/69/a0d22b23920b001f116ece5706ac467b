package presentation;

import javax.swing.*;

import dao.UtilisateurDAO;
import metier.Utilisateur;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

public class LoginCH extends JFrame {
	
	
    private JTextField txtId;
    private JPasswordField txtMdp;

    public LoginCH() {
        setTitle("Login");
        setSize(300, 200);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        JLabel lblNom = new JLabel("ID : ");
        txtId = new JTextField(10);

        JLabel lblMdp = new JLabel("Mot de passe : ");
        txtMdp = new JPasswordField(10);

        JButton btnLogin = new JButton("Se connecter");
        JButton btnRetour = new JButton("retour");
        btnRetour.addActionListener(new ActionListener() {
        	@Override
            public void actionPerformed(ActionEvent e) {
        		Choisir choix=new Choisir();
        		choix.setVisible(true);
        		dispose();
        				
        	
        	}
        
        });
        
        btnLogin.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	
                String idt = txtId.getText();
                int id=Integer.parseInt(idt);
                String mdp = new String(txtMdp.getPassword());
                UtilisateurDAO u = new UtilisateurDAO();

 
                try {
                    if (u.existeUtilisateur(id) == 1) {
                    	if(u.authenticateUtilisateur(id,mdp)) {
                    		if(u.authenticationRole(id,mdp,"chef")) {
                    		
                    		 Chef chef = new Chef();
                             chef.setVisible(true);
                             dispose(); 
                            
                    		}
                    		else {JOptionPane.showMessageDialog(LoginCH.this, "tu n'es pas un Chef !", "Erreur", JOptionPane.ERROR_MESSAGE);
                            }
                         } else {
                             JOptionPane.showMessageDialog(LoginCH.this, "Mot de passe incorrect.", "Erreur", JOptionPane.ERROR_MESSAGE);
                         }
                     }
                    else {
                         JOptionPane.showMessageDialog(LoginCH.this, "Utilisateur non trouvÃ© ", "Erreur", JOptionPane.ERROR_MESSAGE);
                     }
                    }
                 catch (SQLException ex) {
                    
                    JOptionPane.showMessageDialog(LoginCH.this, "Erreur lors de login : " + ex.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            }
        });


        

        panel.add(lblNom);
        panel.add(txtId);
        panel.add(lblMdp);
        panel.add(txtMdp);
        panel.add(btnLogin);    
        panel.add(btnRetour);
        

        getContentPane().add(panel);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            LoginCH login = new LoginCH();
            login.setVisible(true);
        });
    }
}

