package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import metier.Utilisateur;

public class UtilisateurDAO {
	Connection connection=SingletonConnection.getInstance();



    public void ajouterUtilisateur(Utilisateur utilisateur) throws SQLException {
        String sql = "INSERT INTO utilisateur (idU, nomU, mdpU, role) VALUES (?, ?, ?, ?)";
        try (PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setInt(1, utilisateur.getIdU());
            statement.setString(2, utilisateur.getNomU());
            statement.setString(3, utilisateur.getMdpU());
            statement.setString(4, utilisateur.getRole());
            statement.executeUpdate();
        }
    
    }
    public int existeUtilisateur(int idU) throws SQLException{
    	String sql="select idU from utilisateur where idU=?";
    	try(PreparedStatement statement =connection.prepareStatement(sql)){
    		statement.setInt(1, idU);
    		try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next())
                	return 1;
                else return 0;
    		
    	}
    	
    }}
    	/*public String getMdp(int idU) throws SQLException{
    		String sql="select mdpU from utilisateur where idU=?";
    		try(PreparedStatement statement =connection.prepareStatement(sql)){
        		statement.setInt(1, idU);
        		try (ResultSet resultSet = statement.executeQuery()) {
        			String mdp=resultSet.getString("mdpU");
        			return mdp;
        			
    	}
        	

*/
   
    		
    	public boolean authenticateUtilisateur(int id, String mdp) throws SQLException {
    	        String sql = "SELECT * FROM utilisateur WHERE idU = ? AND mdpU = ?";
    	        
    	        try (PreparedStatement statement = connection.prepareStatement(sql)) {
    	            statement.setInt(1, id);
    	            statement.setString(2, mdp);
    	            
    	            try (ResultSet resultSet = statement.executeQuery()) {
    	                return resultSet.next(); // Si le ResultSet contient une ligne, l'authentification est réussie
    	            }
    	        }
    	    }
    	public boolean authenticateServeur(int id, String mdp) throws SQLException {
	        String sql = "SELECT role FROM utilisateur WHERE idU = ? AND mdpU = ?";
	        
	        try (PreparedStatement statement = connection.prepareStatement(sql)) {
	            statement.setInt(1, id);
	            statement.setString(2, mdp);
	            
	            try (ResultSet resultSet = statement.executeQuery()) {
	                resultSet.next();
	                return (resultSet.getString("role").equals("serveur"));// Si le ResultSet contient une ligne, l'authentification est réussie
	            }
	        }
	    }
    	public boolean authenticateChef(int id, String mdp) throws SQLException {
	        String sql = "SELECT role FROM utilisateur WHERE idU = ? AND mdpU = ?";
	        
	        try (PreparedStatement statement = connection.prepareStatement(sql)) {
	            statement.setInt(1, id);
	            statement.setString(2, mdp);
	            
	            try (ResultSet resultSet = statement.executeQuery()) {
	                resultSet.next();
	                return (resultSet.getString("role").equals("chef"));
	            }
	        }
	    }
    	public boolean authenticateClient(int id, String mdp) throws SQLException {
	        String sql = "SELECT role FROM utilisateur WHERE idU = ? AND mdpU = ?";
	        
	        try (PreparedStatement statement = connection.prepareStatement(sql)) {
	            statement.setInt(1, id);
	            statement.setString(2, mdp);
	            
	            try (ResultSet resultSet = statement.executeQuery()) {
	                resultSet.next();
	                return (resultSet.getString("role").equals("client"));
	            }
	        }
	    }
    		
    	
    	}
